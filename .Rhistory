runApp()
dataW11<-melt(variable.name= "Group",DistDATA1("W.1.1. What", "Female v.s. Male", "Abs"))
W11<-dotP(dataW11, titleW11, Wcols)
#       labels = list(style = list(fontSize=13,
#                                  fontFamily='Arial Narrow',
#                                  fontWeight="normal",textOverflow='none'))
#     ) %>%
#     hc_legend(itemStyle = list(fontSize=13,
#                                fontFamily='Arial Narrow',
#                                fontWeight="normal")) %>%
#     hc_add_theme(hc_theme_smpl())
# }
# hcBARchart2(dataW10, Wcols, titleW10)
titleW11<-"How long does it take to go on foot to your main water point, fetch water,\n and return (at peak time)?"
dataW11<-melt(variable.name= "Group",DistDATA1("W.1.1. What", "Female v.s. Male", "Abs"))
W11<-dotP(dataW11, titleW11, Wcols)
W11
dataW11<-melt(variable.name= "Group",DistDATA1("W.1. ", "Female v.s. Male", "Abs"))
W11<-dotP(dataW11, titleW11, Wcols)
DistDATA1("W.1. ", "Female v.s. Male", "Abs")
dataW11<-melt(variable.name= "Group",DistDATAm("W.1. ", "Female v.s. Male", "Abs"))
W11<-dotP(dataW11, titleW11, Wcols)
W11
dataW11
W11<- hcDOTchart(dataW11, titleW11, Wcols)
W11
dataW5<-melt(variable.name= "Group",DistDATA1("W.5.Do", "Female v.s. Male", "Abs"))
dataW5<-dataW5[grepl("Yes",dataW5$variable),]
dataW5
hcBARc(dataW5, Wcols, titleW10)
dataW5[is.na(dataW5)]
dataW5[is.na(dataW5)]<-0
hcBARc(dataW5, Wcols, titleW10)
dataW5
titleW10<-"How long does it take to go on foot to your main water point, fetch water,\n and return (at peak time)?"
dataW10<-melt(variable.name= "Group",DistDATA1("W.10.", "Female v.s. Male", "Abs"))
W10<-hcSTACKEDc(dataW10, Wcols, titleW10)
W10
# #stacked bar chart
hcSTACKEDc<-function(pchart, colorL, gtitle ) {
pchart %>%
hchart('bar', hcaes(x = 'Group',y= "value", group="variable" ))%>%
hc_colors(colorL) %>%
hc_yAxis(
title = list(text = ""),
gridLineWidth = 1,
max=100,
labels = list(format = "{value}%",
style = list(fontSize=13, fontFamily='Arial Narrow', fontWeight="normal"))
) %>%
hc_title(text = paste(gtitle),
style = list(fontSize=20, fontFamily='Arial Narrow', fontWeight="normal")) %>%
hc_xAxis(
lineWidth=0,
minorTickWidth=0,
title = list(text = ""),
labels = list(style = list(fontSize=13, fontFamily='Arial Narrow', fontWeight="normal"))
)  %>%
hc_plotOptions(bar = list(
dataLabels = list(enabled = FALSE),
stacking = "normal",
pointPadding= 0,
borderWidth= 0,
groupPadding= 0,
pointWidth=90)
) %>%
hc_legend(align = "right", verticalAlign = "top",
layout = "vertical", x = 0, y = 100,
itemStyle = list(fontSize=13, fontFamily='Arial Narrow', fontWeight="normal")) %>%
hc_add_theme(hc_theme_smpl())
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
hcDOTc<-function(c_data, colorL, gtitle ) {
hchart(c_data, "scatter", hcaes(group = 'Group',y= "value", x="variable"))%>%
hc_colors(colorL)%>%
hc_legend(itemStyle = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_chart(inverted = TRUE) %>%
hc_xAxis(gridLineWidth= 3,
title = list(text = ""),
labels = list(style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")),
tickmarkPlacement="on")%>%
hc_tooltip(formatter = JS("function(){
return this.series.name+ ':<br>' +
Highcharts.numberFormat(this.point.value, 2) +'%';
}")) %>%
hc_title(text = paste(gtitle),
style = list(fontSize=20,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_yAxis(gridLineWidth= 0,
pointPadding= 0,
borderWidth= 0,
groupPadding= 0,
labels = list(format = "{value}%",
style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal",
textOverflow='none')),
title = list(text = ""),
max=100)%>%
hc_add_theme(hc_theme_smpl())
}
runApp()
hcDOTc<-function(c_data, colorL, gtitle ) {
hchart(c_data, "scatter", hcaes(group = 'Group',y= "value", x="variable"))%>%
hc_colors(colorL)%>%
hc_legend(itemStyle = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_chart(inverted = TRUE) %>%
hc_xAxis(gridLineWidth="5px",
title = list(text = ""),
labels = list(style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")),
tickmarkPlacement="on")%>%
hc_tooltip(formatter = JS("function(){
return this.series.name+ ':<br>' +
Highcharts.numberFormat(this.point.value, 2) +'%';
}")) %>%
hc_title(text = paste(gtitle),
style = list(fontSize=20,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_yAxis(gridLineWidth= 0,
pointPadding= 0,
borderWidth= 0,
groupPadding= 0,
labels = list(format = "{value}%",
style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal",
textOverflow='none')),
title = list(text = ""),
max=100)%>%
hc_add_theme(hc_theme_smpl())
}
runApp()
hcDOTc<-function(c_data, colorL, gtitle ) {
hchart(c_data, "scatter", hcaes(group = 'Group',y= "value", x="variable"))%>%
hc_colors(colorL)%>%
hc_legend(itemStyle = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_chart(inverted = TRUE) %>%
hc_xAxis(gridLineWidth=50,
title = list(text = ""),
labels = list(style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")),
tickmarkPlacement="on")%>%
hc_tooltip(formatter = JS("function(){
return this.series.name+ ':<br>' +
Highcharts.numberFormat(this.point.value, 2) +'%';
}")) %>%
hc_title(text = paste(gtitle),
style = list(fontSize=20,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_yAxis(gridLineWidth= 0,
pointPadding= 0,
borderWidth= 0,
groupPadding= 0,
labels = list(format = "{value}%",
style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal",
textOverflow='none')),
title = list(text = ""),
max=100)%>%
hc_add_theme(hc_theme_smpl())
}
runApp()
hcDOTc<-function(c_data, colorL, gtitle ) {
hchart(c_data, "scatter", hcaes(group = 'Group',y= "value", x="variable"))%>%
hc_colors(colorL)%>%
hc_legend(itemStyle = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_chart(inverted = TRUE) %>%
hc_xAxis(gridLineWidth=0,
title = list(text = ""),
labels = list(style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")),
tickmarkPlacement="on")%>%
hc_tooltip(formatter = JS("function(){
return this.series.name+ ':<br>' +
Highcharts.numberFormat(this.point.value, 2) +'%';
}")) %>%
hc_title(text = paste(gtitle),
style = list(fontSize=20,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_yAxis(gridLineWidth= 0,
pointPadding= 0,
borderWidth= 0,
groupPadding= 0,
labels = list(format = "{value}%",
style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal",
textOverflow='none')),
title = list(text = ""),
max=100)%>%
hc_add_theme(hc_theme_smpl())
}
runApp()
hcDOTc<-function(c_data, colorL, gtitle ) {
hchart(c_data, "scatter", hcaes(group = 'Group',y= "value", x="variable"))%>%
hc_colors(colorL)%>%
hc_legend(itemStyle = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_chart(inverted = TRUE) %>%
hc_xAxis(gridLineWidth=1,
title = list(text = ""),
labels = list(style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")),
tickmarkPlacement="on")%>%
hc_tooltip(formatter = JS("function(){
return this.series.name+ ':<br>' +
Highcharts.numberFormat(this.point.value, 2) +'%';
}")) %>%
hc_title(text = paste(gtitle),
style = list(fontSize=20,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_yAxis(gridLineWidth= 10,
pointPadding= 0,
borderWidth= 0,
groupPadding= 0,
labels = list(format = "{value}%",
style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal",
textOverflow='none')),
title = list(text = ""),
max=100)%>%
hc_add_theme(hc_theme_smpl())
}
runApp()
runApp()
hcDOTc<-function(c_data, colorL, gtitle ) {
hchart(c_data, "scatter", hcaes(group = 'Group',y= "value", x="variable"))%>%
hc_colors(colorL)%>%
hc_legend(itemStyle = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_chart(inverted = TRUE) %>%
hc_xAxis(gridLineWidth=3,
gridLineColor: '#666666',
title = list(text = ""),
labels = list(style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal")),
tickmarkPlacement="on")%>%
hc_tooltip(formatter = JS("function(){
return this.series.name+ ':<br>' +
Highcharts.numberFormat(this.point.value, 2) +'%';
}")) %>%
hc_title(text = paste(gtitle),
style = list(fontSize=20,
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_yAxis(gridLineWidth= 0,
pointPadding= 0,
borderWidth= 0,
groupPadding= 0,
labels = list(format = "{value}%",
style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal",
textOverflow='none')),
title = list(text = ""),
max=100)%>%
hc_add_theme(hc_theme_smpl())
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dataW10
runApp()
runApp()
# #stacked bar chart
hcSTACKEDc<-function(pchart, colorL, gtitle ) {
pchart %>%
hchart('bar', hcaes(x = 'Group',y= "value", group="variable" ))%>%
hc_colors(colorL) %>%
hc_yAxis(
title = list(text = ""),
gridLineWidth = 1,
max=100,
labels = list(format = "{value}%",
style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal"))
) %>%
hc_title(text = paste(gtitle),
style = list(fontSize="18px",
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_xAxis(
lineWidth=0,
minorTickWidth=0,
title = list(text = ""),
labels = list(style = list(fontSize=13, fontFamily='Arial Narrow', fontWeight="normal"))
)  %>%
hc_plotOptions(bar = list(
dataLabels = list(enabled = FALSE),
stacking = "normal",
pointPadding= 0,
borderWidth= 0,
groupPadding= 0,
pointWidth=40)
) %>%
hc_legend(align = "right",
layout = "vertical",
itemStyle = list(fontSize=13, fontFamily='Arial Narrow', fontWeight="normal")) %>%
hc_add_theme(hc_theme_smpl())
}
runApp()
# #stacked bar chart
hcSTACKEDc<-function(pchart, colorL, gtitle ) {
pchart %>%
hchart('bar', hcaes(x = 'Group',y= "value", group="variable" ))%>%
hc_colors(colorL) %>%
hc_yAxis(
title = list(text = ""),
gridLineWidth = 1,
max=100,
labels = list(format = "{value}%",
style = list(fontSize=13,
fontFamily='Arial Narrow',
fontWeight="normal"))
) %>%
hc_title(text = paste(gtitle),
style = list(fontSize="18px",
fontFamily='Arial Narrow',
fontWeight="normal")) %>%
hc_xAxis(
lineWidth=0,
minorTickWidth=0,
title = list(text = ""),
labels = list(style = list(fontSize=13, fontFamily='Arial Narrow', fontWeight="normal"))
)  %>%
hc_plotOptions(bar = list(
dataLabels = list(enabled = FALSE),
stacking = "normal",
pointPadding= 0,
borderWidth= 0,
groupPadding= 0,
pointWidth=40)
) %>%
hc_legend(align = "right", verticalAlign = "middle",
layout = "vertical",
itemStyle = list(fontSize=13, fontFamily='Arial Narrow', fontWeight="normal")) %>%
hc_add_theme(hc_theme_smpl())
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Dist2$Prio
Dist2
View(Dist2)
Dist
View(Dist)
shiny::runApp()
arrange(Dist, desc(admin2pcod))
arrange(Dist, admin2pcod)
Dist<-arrange(Dist, admin2pcod)
Dist2<-Dist
#appending priority to district
Dist2$Prio<-c("Famine","Famine","Cholera","Cholera","Both",
"Cholera","Cholera","Cholera","Cholera", "Famine",
"Famine", "Both","Cholera","Both","Cholera",
"Cholera","Cholera", "Cholera",
"Famine",
"Famine", "Famine",
"Both","Famine", "Cholera", "Famine", "Famine",
"Famine", "Famine", "Cholera",'Famine', "Famine",
"Famine","Famine","Famine","Famine", "Cholera",
"Both", "Famine")
View(Dist2)
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
install.packages("sf")
install.packages("sf")
install.packages('sf')
shiny::runApp()
library("sf", lib.loc="~/R/win-library/3.4")
runApp()
runApp()
install_version("sf", version = "3.4.3.", repos = "http://cran.us.r-project.org")
require(devtools)
install_version("sf", version = "3.4.3.", repos = "http://cran.us.r-project.org")
install_version("sf", version = "3.4.2.", repos = "http://cran.us.r-project.org")
install.packages("sf")
install.packages("sf")
shiny::runApp()
runApp()
library(sf)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
shiny::runApp()
runApp()
runApp()
